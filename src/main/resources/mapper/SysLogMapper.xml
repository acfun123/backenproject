<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.backenproject.mapper.SysLogMapper">
  <resultMap id="BaseResultMap" type="com.cc.backenproject.entity.SysLog">
    <id column="log_id" jdbcType="BIGINT" property="logId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="log_type" jdbcType="VARCHAR" property="logType" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="request_ip" jdbcType="VARCHAR" property="requestIp" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="browser" jdbcType="VARCHAR" property="browser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cc.backenproject.entity.SysLog">
    <result column="params" jdbcType="LONGVARCHAR" property="params" />
    <result column="exception_detail" jdbcType="LONGVARCHAR" property="exceptionDetail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, description, log_type, `method`, request_ip, `time`, username, address, browser, 
    create_time
  </sql>
  <sql id="Blob_Column_List">
    params, exception_detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.cc.backenproject.entity.SysLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.cc.backenproject.entity.SysLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_log
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cc.backenproject.entity.SysLogExample">
    delete from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cc.backenproject.entity.SysLog">
    insert into sys_log (log_id, description, log_type, 
      `method`, request_ip, `time`, 
      username, address, browser, 
      create_time, params, exception_detail
      )
    values (#{logId,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{logType,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{requestIp,jdbcType=VARCHAR}, #{time,jdbcType=BIGINT}, 
      #{username,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{browser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{params,jdbcType=LONGVARCHAR}, #{exceptionDetail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cc.backenproject.entity.SysLog">
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="method != null">
        `method`,
      </if>
      <if test="requestIp != null">
        request_ip,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="browser != null">
        browser,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="exceptionDetail != null">
        exception_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="requestIp != null">
        #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        #{browser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="params != null">
        #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="exceptionDetail != null">
        #{exceptionDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cc.backenproject.entity.SysLogExample" resultType="java.lang.Long">
    select count(*) from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_log
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        `method` = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.requestIp != null">
        request_ip = #{record.requestIp,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.browser != null">
        browser = #{record.browser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.params != null">
        params = #{record.params,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.exceptionDetail != null">
        exception_detail = #{record.exceptionDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sys_log
    set log_id = #{record.logId,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=VARCHAR},
      `method` = #{record.method,jdbcType=VARCHAR},
      request_ip = #{record.requestIp,jdbcType=VARCHAR},
      `time` = #{record.time,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      browser = #{record.browser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      params = #{record.params,jdbcType=LONGVARCHAR},
      exception_detail = #{record.exceptionDetail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_log
    set log_id = #{record.logId,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=VARCHAR},
      `method` = #{record.method,jdbcType=VARCHAR},
      request_ip = #{record.requestIp,jdbcType=VARCHAR},
      `time` = #{record.time,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      browser = #{record.browser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cc.backenproject.entity.SysLog">
    update sys_log
    <set>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        `method` = #{method,jdbcType=VARCHAR},
      </if>
      <if test="requestIp != null">
        request_ip = #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        browser = #{browser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="exceptionDetail != null">
        exception_detail = #{exceptionDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cc.backenproject.entity.SysLog">
    update sys_log
    set description = #{description,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      request_ip = #{requestIp,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      browser = #{browser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      params = #{params,jdbcType=LONGVARCHAR},
      exception_detail = #{exceptionDetail,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cc.backenproject.entity.SysLog">
    update sys_log
    set description = #{description,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      request_ip = #{requestIp,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      browser = #{browser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
</mapper>